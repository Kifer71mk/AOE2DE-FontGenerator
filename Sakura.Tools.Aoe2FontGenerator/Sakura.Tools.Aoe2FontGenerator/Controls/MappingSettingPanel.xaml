<UserControl x:Class="Sakura.Tools.Aoe2FontGenerator.Controls.MappingSettingPanel"
			 x:Name="Me"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sakura.Tools.Aoe2FontGenerator"
             xmlns:controls="clr-namespace:Sakura.Tools.Aoe2FontGenerator.Controls"
             mc:Ignorable="d" 
            d:DesignWidth="800">
	<Grid DataContext="{Binding ElementName=Me, Path=Data}" IsSharedSizeScope="True">

		<StackPanel Orientation="Vertical">
			<GroupBox Margin="3">
				<GroupBox.Header>
					<controls:ImageItem Image="/Images/AutosizeOptimize_16x.png" Text="Glyph Size Scaling" />
				</GroupBox.Header>

				<StackPanel Orientation="Vertical">
					<TextBlock Margin="3" Style="{StaticResource DescriptionTextBlockStyle}">This application will use the global glyph size to generate glyphs. However, the actual glyph size may not work as excepted for many typefaces. You may use the following text box or slider to scaling the generated glyph to get better display effect.</TextBlock>

					<TextBlock Margin="3" Style="{StaticResource DescriptionTextBlockStyle}">
						<Bold>Note:</Bold> If you see broken characters in the game UI, it is mostly caused by the actual glyph size is larger than the excepted global glyph size so the video RAM data may be corrupted. Under such circumstance, you must scale in the glyph size.
					</TextBlock>

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" SharedSizeGroup="Buttons" />
						</Grid.ColumnDefinitions>

						<Label Margin="3" Grid.Column="0">Glyph size scaling ratio:</Label>
						<Slider Name="GlyphSizeRatioSlider" Margin="3" Grid.Column="1" VerticalAlignment="Center" Minimum="0" Maximum="2" Value="{Binding Path=GlyphSizeRatio, Mode=TwoWay}" AutoToolTipPrecision="2" TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="0.05" />
						<TextBox Margin="3" Grid.Column="2" Width="100" Text="{Binding Path=GlyphSizeRatio,Mode=TwoWay}" />

					</Grid>

				</StackPanel>
			</GroupBox>

			<GroupBox Margin="3">
				<GroupBox.Header>
					<controls:ImageItem Image="/Images/TextLineHeight_16x.png" Text="Glyph Baseline Offset" />
				</GroupBox.Header>

				<StackPanel Orientation="Vertical">

					<TextBlock Style="{StaticResource DescriptionTextBlockStyle}">Some typefaces may not provide an proper baseline value for displaying. If you see text is incorrectly vertical aligned with the game UI, you may adjust the following value (ratio based on the excepted standard glyph height of this typeface) to change the vertical location.</TextBlock>

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" SharedSizeGroup="Buttons" />
						</Grid.ColumnDefinitions>

						<Label Margin="3" Grid.Column="0">Glyph baseline offset ratio:</Label>
						<Slider Name="GlyphBaselineOffsetRadioSlider" Margin="3" Grid.Column="1" VerticalAlignment="Center" Minimum="-1" Maximum="1" Value="{Binding Path=BaselineOffsetRatio, Mode=TwoWay}" AutoToolTipPrecision="2" TickPlacement="BottomRight" IsSnapToTickEnabled="True" TickFrequency="0.05" />
						<TextBox Margin="3" Grid.Column="2" Width="100" Text="{Binding Path=BaselineOffsetRatio, Mode=TwoWay}" />

					</Grid>

				</StackPanel>


			</GroupBox>

		</StackPanel>

	</Grid>
</UserControl>
